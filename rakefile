require 'rake'
require './rake/pipeline'

task :default => 'packages:build'

BASEDIR = '/root'
SCRIPTS = {
  build_python: {
    package: 'packages/python',
    script:  'scripts/build_python.sh',
    use_env: [ :st2_python, :st2_python_version, :st2_python_release ]
  }
}.freeze

USE_ENVIRONMENT = [
  :buildnode,
  :compose,
  [:artifact_dir, '/root/build'],       # later change with mktmp ?
  [:debug_level, 1],
  [:st2_python, 0],
  [:st2_python_version, '2.7.10'],
  [:st2_python_relase, '1'],
].freeze

# Packages namespace build related tasks
namespace :packages do

  # CI pipeline helper initialization and parallel output dispatcher startup
  ci = PipeLine.new(BASEDIR, SCRIPTS, USE_ENVIRONMENT)
  ShellOut.run

  desc "Main entry packages build task"
  task :build => [:upload, :packages] do
    ShellOut.finalize
  end

  desc "Various uploads to the remotes"
  multitask :upload => [:upload_scripts, :upload_sources]
  task :upload_scripts do
    ci.exec.ssh hostname: ci.env.buildnode do
      upload! 'scripts', './', recursive: true
    end
  end

  task :upload_sources do
    ci.exec.ssh hostname: ci.env.buildnode do
      upload! 'packages', './', recursive: true
    end
  end

  multitask :packages => [
    :st2python,
    :st2common
  ]

  desc "Build python task"
  task :st2python do
    ci.exec.ssh hostname: ci.env.buildnode do
      opts = ci.script_options :build_python
      options label: 'package: st2python', show_uuid: false

      execute :mkdir, "-p #{ci.env.artifact_dir}"

      with(opts.env) do
        within(opts.within) do
          execute :bash, opts.path, *opts.args
        end
      end
    end
  end

  desc "Build st2common task"
  task :st2common do
  end

end
